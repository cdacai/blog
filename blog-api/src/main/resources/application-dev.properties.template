# 开发环境配置模板
# 请复制此文件并重命名为application-dev.properties，然后填入实际的配置值

# 服务器配置
server.port=8090
server.servlet.context-path=/blog

# 文件上传大小限制
spring.servlet.multipart.max-file-size=20MB
spring.servlet.multipart.max-request-size=20MB

# 博客配置
blog.name=Naccl's Blog
blog.api=http://localhost:${server.port}/blog
blog.cms=http://localhost:8079
blog.view=http://localhost:8081

# CORS配置
blog.cors.origins=http://localhost:8080
blog.cors.credentials=true
blog.cors.methods=GET,POST,PUT,DELETE,OPTIONS
blog.cors.headers=*
blog.cors.maxAge=3600

# 数据库配置
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
spring.datasource.url=jdbc:mysql://localhost:3306/nblog?useUnicode=true&characterEncoding=utf8&useSSL=false&serverTimezone=GMT%2B8&allowPublicKeyRetrieval=true
spring.datasource.username=root
spring.datasource.password=${DB_PASSWORD}

# Redis配置
spring.redis.host=127.0.0.1
spring.redis.port=6379
spring.redis.password=${REDIS_PASSWORD}
spring.redis.database=0
spring.redis.timeout=10000ms

# MyBatis配置
mybatis.mapper-locations=classpath:mapper/*.xml
mybatis.configuration.map-underscore-to-camel-case=true

# 日志配置
logging.file=blog-api/log/blog-dev
logging.level.root=info
logging.level.com.caixiaohu.interceptor.RequestLogInterceptor=debug
logging.level.com.caixiaohu.service.impl.CommentServiceImpl=debug
logging.level.com.caixiaohu.service.impl.BaiduContentServiceImpl=debug
logging.level.com.caixiaohu.service.storage=debug
logging.level.com.caixiaohu.util=debug
logging.pattern.console=%d{yyyy-MM-dd HH:mm:ss.SSS} %highlight(%-5level) %cyan(%logger{50}) - %msg%n

# 请求响应日志配置
log.param.request-max-length=500
log.param.response-max-length=500
log.param.response-success-data-max-length=100

# JWT配置
token.expireTime=259200000
token.secretKey=${TOKEN_SECRET_KEY}

# 评论配置
comment.notify.channel=mail
comment.default-open=true

# 邮箱配置
spring.mail.host=smtp.qq.com
spring.mail.port=465
spring.mail.username=mingshuiyi@qq.com
spring.mail.password=${MAIL_PASSWORD}
spring.mail.nickname=Observe
spring.mail.properties.mail.smtp.auth=true
spring.mail.properties.mail.smtp.starttls.enable=true
spring.mail.properties.mail.smtp.starttls.required=true
spring.mail.properties.mail.smtp.ssl.enable=true

# 文件上传配置
upload.channel=local
upload.path=upload
upload.access-path=images

# 又拍云配置
upload.upyun.bucketName=observe
upload.upyun.username=mingshuiyi
upload.upyun.password=${UPYUN_PASSWORD}
upload.upyun.path=/main/tech
upload.upyun.domain=https://cdn.caixiaohu.com

# 百度内容审核配置
baidu.content.api-key=${BAIDU_API_KEY}
baidu.content.secret-key=${BAIDU_SECRET_KEY}
baidu.content.enabled=true
baidu.content.allow-suspicious=false

# ===== devtools配置 开始 =====
# 禁用devtools自动重启功能，避免开发环境下每60秒自动重启
# 注意：此配置仅用于开发环境，生产环境不需要此配置
spring.devtools.restart.enabled=false
# ===== devtools配置 结束 =====

# =====Quartz定时任务配置开始=====
# 使用数据库存储任务
spring.quartz.job-store-type=jdbc
# 初始化表结构（首次启动时设置为always，后续设置为never）
spring.quartz.jdbc.initialize-schema=never
# 表结构脚本位置
spring.quartz.jdbc.schema=classpath:schema/quartz_tables.sql
# 自动启动
spring.quartz.auto-startup=true
# 应用关闭时等待quartz任务完成
spring.quartz.wait-for-jobs-to-complete-on-shutdown=true
# 覆盖已存在的任务
spring.quartz.overwrite-existing-jobs=true
# 调度器实例名
spring.quartz.scheduler-name=BlogScheduler
# 实例ID自动生成
spring.quartz.properties.org.quartz.scheduler.instanceId=AUTO
# 持久化方式配置
spring.quartz.properties.org.quartz.jobStore.class=org.quartz.impl.jdbcjobstore.JobStoreTX
spring.quartz.properties.org.quartz.jobStore.driverDelegateClass=org.quartz.impl.jdbcjobstore.StdJDBCDelegate
spring.quartz.properties.org.quartz.jobStore.tablePrefix=QRTZ_
# 集群配置
spring.quartz.properties.org.quartz.jobStore.isClustered=true
spring.quartz.properties.org.quartz.jobStore.clusterCheckinInterval=10000
# 线程池配置
spring.quartz.properties.org.quartz.threadPool.class=org.quartz.simpl.SimpleThreadPool
spring.quartz.properties.org.quartz.threadPool.threadCount=10
spring.quartz.properties.org.quartz.threadPool.threadPriority=5
spring.quartz.properties.org.quartz.threadPool.threadsInheritContextClassLoaderOfInitializingThread=true
# 开启JMX监控
spring.quartz.properties.org.quartz.scheduler.jmx.export=true
# =====Quartz定时任务配置结束=====